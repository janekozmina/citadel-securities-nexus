import React from 'react';
import { PageHeader } from '@/components/common/PageHeader';
import { DataTable } from '@/components/common/DataTable';
import { InteractiveChart } from '@/components/common/InteractiveChart';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { QuickActionsManager } from '@/components/common/QuickActionsManager';
import { FileText, BarChart3, Calendar, Download, Settings, Eye, Play } from 'lucide-react';

export default function ReportingAnalyticsPage() {
  const handleQuickAction = (actionId: string) => {
    switch (actionId) {
      case 'generate-regulatory-report':
        console.log('Generating Regulatory Report...');
        break;
      case 'build-custom-report':
        console.log('Opening Custom Report Builder...');
        break;
      case 'schedule-report':
        console.log('Opening Schedule Report dialog...');
        break;
      case 'export-analytics':
        console.log('Exporting Analytics Data...');
        break;
      default:
        console.log(`Quick action clicked: ${actionId}`);
        break;
    }
  };

  const reportingMetrics = [
    {
      title: 'Regulatory Reports',
      value: '24',
      change: '+2',
      changeType: 'positive' as const,
      icon: FileText
    },
    {
      title: 'Custom Reports',
      value: '156',
      change: '+18',
      changeType: 'positive' as const,
      icon: BarChart3
    },
    {
      title: 'Scheduled Reports',
      value: '89',
      change: '+5',
      changeType: 'positive' as const,
      icon: Calendar
    },
    {
      title: 'Data Exports',
      value: '1,247',
      change: '+134',
      changeType: 'positive' as const,
      icon: Download
    }
  ];

  const regulatoryReportsData = [
    {
      id: 2,
      reportName: 'Collateral Coverage Ratio',
      reportCode: 'CCR-002',
      frequency: 'Daily',
      lastGenerated: '2025-01-16',
      nextDue: '2025-01-17',
      status: 'Current',
      regulator: 'Central Bank of Bahrain',
      format: 'PDF',
      autoGenerated: true
    },
    {
      id: 3,
      reportName: 'Liquidity Risk Management',
      reportCode: 'LRM-003',
      frequency: 'Weekly',
      lastGenerated: '2025-01-14',
      nextDue: '2025-01-21',
      status: 'Current',
      regulator: 'Central Bank of Bahrain',
      format: 'Excel',
      autoGenerated: true
    },
    {
      id: 4,
      reportName: 'Counterparty Credit Risk',
      reportCode: 'CCR-004',
      frequency: 'Monthly',
      lastGenerated: '2025-01-10',
      nextDue: '2025-02-10',
      status: 'Pending Review',
      regulator: 'BCBS',
      format: 'CSV',
      autoGenerated: false
    },
    {
      id: 5,
      reportName: 'Islamic Banking Compliance',
      reportCode: 'IBC-005',
      frequency: 'Quarterly',
      lastGenerated: '2024-12-31',
      nextDue: '2025-03-31',
      status: 'Current',
      regulator: 'AAOIFI',
      format: 'PDF',
      autoGenerated: true
    }
  ];

  const customReportsData = [
    {
      id: 1,
      reportName: 'Collateral Utilization Analysis',
      category: 'Risk Management',
      createdBy: 'Risk Team',
      lastRun: '2025-01-16',
      runCount: 45,
      avgRunTime: '2.3 mins',
      dataRange: 'Last 30 days',
      status: 'Active'
    },
    {
      id: 2,
      reportName: 'Counterparty Concentration Report',
      category: 'Credit Risk',
      createdBy: 'Credit Team',
      lastRun: '2025-01-15',
      runCount: 123,
      avgRunTime: '4.1 mins',
      dataRange: 'Last 90 days',
      status: 'Active'
    },
    {
      id: 3,
      reportName: 'Haircut Effectiveness Study',
      category: 'Market Risk',
      createdBy: 'Market Risk',
      lastRun: '2025-01-12',
      runCount: 28,
      avgRunTime: '6.8 mins',
      dataRange: 'Last 180 days',
      status: 'Active'
    },
    {
      id: 4,
      reportName: 'Optimization Savings Tracker',
      category: 'Operations',
      createdBy: 'Operations Team',
      lastRun: '2025-01-14',
      runCount: 67,
      avgRunTime: '1.9 mins',
      dataRange: 'Last 60 days',
      status: 'Scheduled'
    }
  ];

  const reportFrequencyData = [
    { name: 'Daily', value: 12, color: 'hsl(var(--chart-1))' },
    { name: 'Weekly', value: 8, color: 'hsl(var(--chart-2))' },
    { name: 'Monthly', value: 15, color: 'hsl(var(--chart-3))' },
    { name: 'Quarterly', value: 6, color: 'hsl(var(--chart-4))' },
    { name: 'Ad-hoc', value: 23, color: 'hsl(var(--chart-5))' }
  ];

  const regulatoryColumns = [
    { key: 'reportName', label: 'Report Name', type: 'text' as const, sortable: true },
    { key: 'reportCode', label: 'Code', type: 'text' as const, sortable: true },
    { key: 'frequency', label: 'Frequency', type: 'text' as const, sortable: true },
    { key: 'lastGenerated', label: 'Last Generated', type: 'date' as const, sortable: true },
    { key: 'nextDue', label: 'Next Due', type: 'date' as const, sortable: true },
    { key: 'regulator', label: 'Regulator', type: 'text' as const, sortable: true },
    { key: 'format', label: 'Format', type: 'text' as const },
    { 
      key: 'status', 
      label: 'Status', 
      type: 'status' as const,
      filterable: true,
      filterOptions: [
        { value: 'Current', label: 'Current' },
        { value: 'Pending Review', label: 'Pending Review' },
        { value: 'Overdue', label: 'Overdue' }
      ]
    }
  ];

  const customColumns = [
    { key: 'reportName', label: 'Report Name', type: 'text' as const, sortable: true },
    { key: 'category', label: 'Category', type: 'text' as const, sortable: true },
    { key: 'createdBy', label: 'Created By', type: 'text' as const, sortable: true },
    { key: 'lastRun', label: 'Last Run', type: 'date' as const, sortable: true },
    { key: 'runCount', label: 'Run Count', type: 'number' as const, sortable: true },
    { key: 'avgRunTime', label: 'Avg Runtime', type: 'text' as const, sortable: true },
    { key: 'dataRange', label: 'Data Range', type: 'text' as const },
    { 
      key: 'status', 
      label: 'Status', 
      type: 'status' as const,
      filterable: true,
      filterOptions: [
        { value: 'Active', label: 'Active' },
        { value: 'Scheduled', label: 'Scheduled' },
        { value: 'Inactive', label: 'Inactive' }
      ]
    }
  ];

  return (
    <div className="grid grid-cols-1 xl:grid-cols-4 gap-6">
      <div className="xl:col-span-3 space-y-6">
        <PageHeader 
          title="Reporting & Analytics"
          description="Generate regulatory reports and build custom analytics for collateral management"
        />

        {/* Summary Metrics */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          {reportingMetrics.map((metric, index) => (
            <Card key={index}>
              <CardContent className="p-6">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-sm font-medium text-muted-foreground">{metric.title}</p>
                    <p className="text-2xl font-bold">{metric.value}</p>
                    <p className="text-xs text-muted-foreground">
                      <span className={metric.changeType === 'positive' ? 'text-green-600' : 'text-red-600'}>
                        {metric.change}
                      </span>
                      {' '}this month
                    </p>
                  </div>
                  <div className="flex flex-col items-end">
                    <metric.icon className="h-8 w-8 text-primary mb-2" />
                  </div>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>


        {/* Regulatory Reports */}
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <FileText className="h-5 w-5" />
              Regulatory Reports
            </CardTitle>
          </CardHeader>
          <CardContent>
            <DataTable
              title="Automated Regulatory Reporting"
              columns={regulatoryColumns}
              data={regulatoryReportsData}
              searchable={true}
              itemsPerPage={10}
            />
          </CardContent>
        </Card>

        {/* Custom Reports */}
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Settings className="h-5 w-5" />
              Custom Reports
            </CardTitle>
          </CardHeader>
          <CardContent>
            <DataTable
              title="User-Defined Analytics & Reports"
              columns={customColumns}
              data={customReportsData}
              searchable={true}
              itemsPerPage={10}
            />
          </CardContent>
        </Card>
      </div>

      <div className="xl:col-span-1">
        <QuickActionsManager 
          pageKey="reporting-analytics" 
          systemType="cms" 
          onActionClick={handleQuickAction}
        />
      </div>
    </div>
  );
}